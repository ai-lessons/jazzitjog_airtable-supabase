name: Simple Debug

on:
  workflow_dispatch:

jobs:
  debug:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Show Environment
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
          AIRTABLE_API_KEY: ${{ secrets.AIRTABLE_API_KEY }}
          AIRTABLE_BASE_ID: ${{ secrets.AIRTABLE_BASE_ID }}
          AIRTABLE_TABLE_NAME: ${{ secrets.AIRTABLE_TABLE_NAME }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          echo "Environment variables check:"
          echo "SUPABASE_URL: $SUPABASE_URL"
          echo "SUPABASE_KEY (first 30 chars): ${SUPABASE_KEY:0:30}..."
          echo "AIRTABLE_BASE_ID: $AIRTABLE_BASE_ID"
          echo "AIRTABLE_TABLE_NAME: $AIRTABLE_TABLE_NAME"
          echo "OPENAI_API_KEY (first 20 chars): ${OPENAI_API_KEY:0:20}..."

      - name: Check Database Connection
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
          AIRTABLE_API_KEY: ${{ secrets.AIRTABLE_API_KEY }}
          AIRTABLE_BASE_ID: ${{ secrets.AIRTABLE_BASE_ID }}
          AIRTABLE_TABLE_NAME: ${{ secrets.AIRTABLE_TABLE_NAME }}
        run: |
          node -e "
          import('dotenv/config');
          import('@supabase/supabase-js').then(({ createClient }) => {
            const supabase = createClient(
              process.env.SUPABASE_URL,
              process.env.SUPABASE_KEY
            );

            Promise.all([
              supabase.from('staging_table').select('*', { count: 'exact', head: true }),
              supabase.from('shoe_results').select('*', { count: 'exact', head: true })
            ]).then(([staging, prod]) => {
              console.log('Database check:');
              console.log('staging_table count:', staging.count);
              console.log('shoe_results count:', prod.count);

              if (staging.error) console.error('staging_table error:', staging.error);
              if (prod.error) console.error('shoe_results error:', prod.error);
            });
          });
          "

      - name: Run Filtering Logic Test
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
          AIRTABLE_API_KEY: ${{ secrets.AIRTABLE_API_KEY }}
          AIRTABLE_BASE_ID: ${{ secrets.AIRTABLE_BASE_ID }}
          AIRTABLE_TABLE_NAME: ${{ secrets.AIRTABLE_TABLE_NAME }}
        run: node check-what-blocks-new.mjs
